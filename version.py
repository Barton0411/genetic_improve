"""
版本信息管理
"""

# 版本号格式: 主版本号.次版本号.修订号.构建号 (xxx.xxx.xxx.xxx)
VERSION = "1.0.9.9"

# 版本历史
VERSION_HISTORY = [
    {
        "version": "1.0.9.9",
        "date": "2025-09-17",
        "author": "Development Team",
        "changes": [
            "🔥 完整实现应用内自动更新系统",
            "⚡ 真实下载功能替代模拟进度条",
            "🛡️ 智能DMG挂载和应用识别机制",
            "🎯 通用应用名称识别，无需硬编码",
            "🔒 多重安全验证避免误操作其他应用",
            "🎨 GUI权限对话框避免终端密码卡死",
            "📦 支持完全自动安装和重启",
            "🚀 端到端自动更新流程验证完成"
        ]
    },
    {
        "version": "1.0.5.2",
        "date": "2025-09-16",
        "author": "Development Team",
        "changes": [
            "调整近交系数默认阈值从3.125%改为6.25%",
            "优化选配约束条件，提供更多选配组合",
            "更新GUI界面默认选择为6.25%阈值",
            "完善个体选配和完整选配的默认参数"
        ]
    },
    {
        "version": "1.0.5.1",
        "date": "2025-09-16",
        "author": "Development Team",
        "changes": [
            "测试GitHub Actions自动构建流程",
            "验证强制更新系统完整功能",
            "OSS自动扫描API集成测试",
            "自动生成changelog并上传到OSS",
            "端到端自动化部署流程验证"
        ]
    },
    {
        "version": "1.0.6",
        "date": "2025-09-16",
        "author": "Development Team", 
        "changes": [
            "🔥 实现强制更新系统，确保关键更新必须安装",
            "⚡ 新增应用内智能更新功能，无需手动下载安装包",
            "🛡️ 增强更新安全性，支持完整文件替换和回滚机制",
            "🎨 全新设计的更新对话框，支持深色/浅色模式自动适配",
            "📦 智能路径检测，支持任意安装位置的程序更新",
            "🔒 保护用户数据，更新过程中项目文件和配置安全不受影响",
            "🚀 三阶段更新流程：准备→执行→验证，确保更新可靠性",
            "💻 跨平台兼容，完美支持Windows、macOS和Linux系统"
        ]
    },
    {
        "version": "1.0.5",
        "date": "2025-09-16",
        "author": "Development Team",
        "changes": [
            "完善版本自动更新系统，支持GUI对话框选择下载",
            "修复版本检查服务器连接逻辑，增加备用服务器支持",
            "优化下载URL获取机制，直接从版本信息API响应中提取",
            "更新PyQt6更新对话框，替换原有tkinter实现避免崩溃",
            "更新全面的系统文档和部署指南",
            "优化requirements.txt依赖版本和兼容性",
            "为明日API化数据库连接做准备，提升安全性"
        ]
    },
    {
        "version": "1.0.4",
        "date": "2025-09-15",
        "author": "Development Team",
        "changes": [
            "优化个体选配报告生成性能，添加约束数据缓存机制",
            "实现选配备注系统，详细说明约束过滤情况",
            "新增近交系数和隐性基因约束分析功能",
            "修复备注格式，去除冗余前缀文字",
            "大幅提升报告生成速度，减少文件I/O操作",
            "增强约束分析准确性，支持跳过优质公牛的详细说明"
        ]
    },
    {
        "version": "1.0.3",
        "date": "2025-08-27",
        "author": "Development Team",
        "changes": [
            "修复后代近交系数排序问题，优先按后代近交系数降序排序",
            "修复血缘图滚轮缩放时图形消失问题，添加缩放边界检查",
            "禁止缩放血缘图标题，保持标题大小固定",
            "添加代数选择按钮，支持2-6代血缘图显示",
            "增大血缘图字体大小，提高可读性",
            "降低滚轮缩放敏感度，减少单次缩放幅度",
            "修复缩放中心固定为血缘图正中心，防止图形移动",
            "完全禁用简易系谱图的拖动功能，只保留双击查看详细视图",
            "扩展代数选择范围为2-6代，字体大小自动适配框的大小",
            "移除适应内容按钮，简化用户界面"
        ]
    },
    {
        "version": "1.0.2",
        "date": "2025-08-08",
        "author": "Development Team",
        "changes": [
            "优化冻精分配算法，先给排名高的母牛分配排名高的公牛",
            "加载公牛指数得分用于计算后代得分",
            "根据后代得分排序公牛，确保高分母牛优先获得高分公牛",
            "修复冻精预览表列宽问题，冻精编号显示完整",
            "添加育种项目管理文件双击打开和右键菜单功能"
        ]
    },
    {
        "version": "1.0.1",
        "date": "2025-07-29",
        "author": "Development Team",
        "changes": [
            "重大改进PPT生成功能",
            "新增母牛关键性状详情分析页",
            "新增公牛育种指数排名页",
            "新增年度遗传进展趋势页",
            "新增近交系数风险分析页",
            "新增隐性基因筛查统计页",
            "新增选配推荐详情示例页",
            "新增项目总结与改良建议页",
            "优化PPT页面布局和数据展示",
            "增强PPT内容的完整性和专业性",
            "修复数据库DNS解析问题，使用IP地址直连",
            "更新requirements.txt，添加所有缺失的依赖项",
            "修复opencv-python、networkx、scikit-learn依赖缺失问题"
        ]
    },
    {
        "version": "1.0.0",
        "date": "2025-07-28",
        "author": "Development Team",
        "changes": [
            "初始版本发布",
            "实现育种项目管理功能",
            "实现数据上传功能（母牛、公牛、配种记录、体型外貌、基因组数据）",
            "实现关键育种性状分析",
            "实现牛只指数计算排名",
            "实现近交系数及隐性基因分析",
            "实现个体选配功能",
            "实现选配推荐报告生成（包含后代得分预测）",
            "实现PPT自动报告生成",
            "集成阿里云数据库",
            "优化UI界面和用户体验"
        ]
    }
]

# 获取当前版本
def get_version():
    """获取当前版本号"""
    return VERSION

# 获取版本信息
def get_version_info():
    """获取当前版本的完整信息"""
    for v in VERSION_HISTORY:
        if v["version"] == VERSION:
            return v
    # 如果没找到，返回第一个（最新的）
    if VERSION_HISTORY:
        return VERSION_HISTORY[0]
    return None

# 获取版本历史
def get_version_history():
    """获取所有版本历史"""
    return VERSION_HISTORY
events {
    worker_connections 1024;
}

http {
    upstream genetic_improve_app {
        least_conn;
        server app1:6080 max_fails=3 fail_timeout=30s;
        server app2:6080 max_fails=3 fail_timeout=30s;
        server app3:6080 max_fails=3 fail_timeout=30s;
        server app4:6080 max_fails=3 fail_timeout=30s;
        server app5:6080 max_fails=3 fail_timeout=30s;
    }

    # 会话粘性映射
    map $cookie_session_id $backend {
        ~^(?<session_prefix>.{2}) $session_prefix;
        default "app1:6080";
    }

    server {
        listen 80;
        server_name your-domain.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name your-domain.com;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # WebSocket支持
        location / {
            proxy_pass http://genetic_improve_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }

        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
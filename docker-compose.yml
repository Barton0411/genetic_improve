version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app1
      - app2
      - app3
      - app4
      - app5
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  app1:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "6080:6080"
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
      - INSTANCE_ID=1
    restart: unless-stopped
    depends_on:
      - redis

  app2:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "6081:6080"
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
      - INSTANCE_ID=2
    restart: unless-stopped
    depends_on:
      - redis

  app3:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "6082:6080"
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
      - INSTANCE_ID=3
    restart: unless-stopped
    depends_on:
      - redis

  app4:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "6083:6080"
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
      - INSTANCE_ID=4
    restart: unless-stopped
    depends_on:
      - redis

  app5:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "6084:6080"
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
      - INSTANCE_ID=5
    restart: unless-stopped
    depends_on:
      - redis

  # 定时任务处理器
  celery-worker:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A tasks worker --loglevel=info
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    environment:
      - DISPLAY=:99
    depends_on:
      - redis
    restart: unless-stopped

  celery-beat:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A tasks beat --loglevel=info
    volumes:
      - ./data:/app/data
      - ./projects:/app/projects
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data: